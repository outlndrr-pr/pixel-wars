rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidPixel() {
      let pixel = request.resource.data;
      return 
        pixel.x is number && 
        pixel.y is number && 
        pixel.color is string && 
        pixel.teamId is string && 
        pixel.lastUpdated is timestamp;
    }
    
    function canPlacePixel(userId) {
      let user = get(/databases/$(database)/documents/users/$(userId)).data;
      let now = request.time;
      return user.lastPixelPlacement == null || 
             (now.toMillis() - user.lastPixelPlacement.toMillis()) >= 10000; // 10 seconds cooldown
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
    }

    // Pixels collection
    match /pixels/{pixelId} {
      allow read: if true; // Anyone can read pixels
      allow write: if isSignedIn() && 
                     isValidPixel() && 
                     canPlacePixel(request.auth.uid);
    }

    // Events collection
    match /events/{eventId} {
      allow read: if true;
      allow write: if false; // Only backend can write events
    }

    // Power-ups collection
    match /powerUps/{powerUpId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if false; // Only backend can modify power-ups
    }
  }
}